<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutApp" xml:space="preserve">
    <value>About</value>
    <comment>About</comment>
  </data>
  <data name="AppHelp" xml:space="preserve">
    <value>Help</value>
    <comment>App</comment>
  </data>
  <data name="FatalErrorUnexpected" xml:space="preserve">
    <value>An unexpected error in the application</value>
    <comment>Error</comment>
  </data>
  <data name="InitAppFatalError" xml:space="preserve">
    <value>An error occurred during application initialization</value>
    <comment>App</comment>
  </data>
  <data name="ProcessError" xml:space="preserve">
    <value>Error</value>
    <comment>Process</comment>
  </data>
  <data name="ProcessIdle" xml:space="preserve">
    <value>Idle</value>
    <comment>Process</comment>
  </data>
  <data name="ProcessPaused" xml:space="preserve">
    <value>Paused</value>
    <comment>Process</comment>
  </data>
  <data name="ProcessRunning" xml:space="preserve">
    <value>Running</value>
    <comment>Process</comment>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="ThemeDescription" xml:space="preserve">
    <value>The basic theme for MyTagPocket.</value>
    <comment>Gui</comment>
  </data>
  <data name="ThemeDescriptionExample" xml:space="preserve">
    <value>It serves as an example of the Theme definition in the application. Changes in this file do not affect the application itself.</value>
    <comment>Gui</comment>
  </data>
  <data name="UpgradeDatabaseLabel" xml:space="preserve">
    <value>Upgrade Database</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStatusEndError" xml:space="preserve">
    <value>Finished with error</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStatusEndSucces" xml:space="preserve">
    <value>Successfully completed</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStatusNotStart" xml:space="preserve">
    <value>Not started</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStatusProgress" xml:space="preserve">
    <value>In Progress</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStatusStop" xml:space="preserve">
    <value>Stop</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageContentsDescriptionLabel" xml:space="preserve">
    <value>Updating basic user content structures.</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageContentsLabel" xml:space="preserve">
    <value>Storage contents</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageLabel" xml:space="preserve">
    <value>Upgrade Storage</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageSettingsDescriptionLabel" xml:space="preserve">
    <value>Updating application settings and their configuration parts.</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageSettingsError" xml:space="preserve">
    <value>Unable to complete update settings</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageSettingsIsActual" xml:space="preserve">
    <value>Storage settings is last version</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageSettingsLabel" xml:space="preserve">
    <value>Storage settings</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeStorageSettingSucces" xml:space="preserve">
    <value>Update setup completed successfully</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeInfoFinishError" xml:space="preserve">
    <value>There was an error updating</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeInfoFinishSucces" xml:space="preserve">
    <value>Update completed successfully</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeInfoNotStarted" xml:space="preserve">
    <value>Update not started</value>
    <comment>Upgrade</comment>
  </data>
  <data name="UpgradeInfoStarted" xml:space="preserve">
    <value>Update started</value>
    <comment>Upgrade</comment>
  </data>
  <data name="ExceptionCantLoadFile" xml:space="preserve">
    <value>Can't load file.</value>
    <comment>Exception</comment>
  </data>
  <data name="ExceptionCantDeleteFile" xml:space="preserve">
    <value>Can't delete file.</value>
    <comment>Exception</comment>
  </data>
  <data name="ExceptionCantLoadFileFromArchive" xml:space="preserve">
    <value>Can't load file from archive.</value>
    <comment>Exception</comment>
  </data>
  <data name="ExceptionCantSaveFileToArchive" xml:space="preserve">
    <value>Can't save file to archive.</value>
    <comment>Exception</comment>
  </data>
  <data name="ErrorCantReadSecure" xml:space="preserve">
    <value>Unable to retrieve data from secure storage.</value>
    <comment>SecureRepository</comment>
  </data>
  <data name="ErrorCantSaveSecure" xml:space="preserve">
    <value>Unable to save data to secure storage.</value>
    <comment>SecureRepository</comment>
  </data>
  <data name="ErrorDeleteAllItemSecure" xml:space="preserve">
    <value>Unable to delete data from secure storage.</value>
    <comment>SecureRepository</comment>
  </data>
  <data name="ErrorDeleteItemSecure" xml:space="preserve">
    <value>Unable to delete data from secure storage.</value>
    <comment>SecureRepository</comment>
  </data>
  <data name="ExceptionDalRepositorySaveFileIdFileEmpty" xml:space="preserve">
    <value>Unable to determine the file identifier required to save.</value>
    <comment>DalRepository</comment>
  </data>
  <data name="ExceptionDalRepositorySaveFileName" xml:space="preserve">
    <value>Unable to determine the file name required to save.</value>
    <comment>DalRepository</comment>
  </data>
  <data name="FileNotCompatible" xml:space="preserve">
    <value>The loaded file is not valid.</value>
    <comment>File</comment>
  </data>
</root>